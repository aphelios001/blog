<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Data Structure</title>
    <link href="/2024/11/17/Data-Structure/"/>
    <url>/2024/11/17/Data-Structure/</url>
    
    <content type="html"><![CDATA[<h1 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h1><h2 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h2><p>数据结构的<strong>三要素</strong>：逻辑结构，物理结构（存储结构），数据运算。</p><p>逻辑结构：</p><ul><li>集合结构</li><li>线性结构（一对一）</li><li>树形结构（一对多）</li><li>图状结构（多对多）</li></ul><p>物理结构：</p><ul><li>顺序存储</li><li>链式存储</li><li>索引存储</li><li>散列存储</li></ul><p>数据结构是要处理的信息。</p><p>算法是处理信息的步骤。</p><p>算法的五个特性：</p><ul><li>有穷性（有穷时间内能执行完算法）</li><li>确定性（相同的输入只会产生相同的输出）</li><li>可行性（可以用已有的基本操作实现算法）</li><li>输入</li><li>输出</li></ul><p>好算法的特质：</p><ul><li>正确性（能正确解决问题）</li><li>可读性（对算法的描述要让其他人看得明白）</li><li>健壮性（算法能处理一些异常的状态）</li><li>高效率与低存储量需求（时间复杂度和空间复杂度低）</li></ul><p>重点：</p><p>请你学习和掌握时间复杂度和空间复杂度的计算。</p><h2 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h2><p><strong>线性表（List）：零个或多个数据元素的有限序列。</strong></p><p><strong>线性表</strong>：</p><ul><li>顺序存储<ul><li>顺序表</li></ul></li><li>链式存储<ul><li>链表<ul><li>单链表</li><li>双链表</li><li>循环链表</li><li>静态链表（用数组实现）</li></ul></li></ul></li></ul><p><strong>顺序表</strong>：用一组<strong>地址连续</strong>的存储单元依次存储线性表的数据元素,逻辑上相邻的数据元素，物理次序也是相邻的。（地址一定相邻）</p><p>顺序表的定义：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//静态分配</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> Maxsize 10 </span><br><span class="hljs-keyword">typedef</span> <span class="hljs-keyword">struct</span> <br>&#123;<br>    ElementType data[MaxSize];<br>    <span class="hljs-type">int</span> length;<br>    <br>&#125; SequenceList,SeqList;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">InitList</span><span class="hljs-params">(SeqList &amp;L)</span><span class="hljs-comment">//初始化顺序表</span></span><br><span class="hljs-function"></span>&#123;<br>    L.length = <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-comment">//动态分配</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> InitSize 10</span><br><span class="hljs-keyword">typedef</span> <span class="hljs-keyword">struct</span><br>&#123;<br>    ElementType *data;<br>    <span class="hljs-type">int</span> Maxsize;<br>    <span class="hljs-type">int</span> length;<br><br>&#125; SequenceList,SeqList;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">InitList</span><span class="hljs-params">(SeqList&amp; L)</span><span class="hljs-comment">//初始化顺序表</span></span><br><span class="hljs-function"></span>&#123;<br>    L.data = (ElementType*)<span class="hljs-built_in">malloc</span>(<span class="hljs-built_in">sizeof</span>(ElementType) * InitSize);<br>    L.length = <span class="hljs-number">0</span>;<br>    L.Maxsize = InitSize;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>线性表的插入和删除：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">InsertElem</span><span class="hljs-params">(SeqList &amp;L,<span class="hljs-type">int</span> i,<span class="hljs-type">int</span> e)</span><span class="hljs-comment">//i是位序，e是待插入的元素</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">if</span>(i&lt;<span class="hljs-number">1</span>||i&gt;L.length<span class="hljs-number">+1</span>)<span class="hljs-comment">//判断位序的范围是否合法</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br>    <span class="hljs-keyword">if</span>(L.length&gt;=MaxSize)<span class="hljs-comment">//判断顺序表是否满了</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=L.length<span class="hljs-number">-1</span>;j&gt;=i;j--)<br>    &#123;<br>        L.data[j] = L.data[j<span class="hljs-number">-1</span>];<br>    &#125;<br>    L.data[i<span class="hljs-number">-1</span>]=e;<br>    L.length++;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">DeleteElem</span><span class="hljs-params">(SeqList &amp;L,<span class="hljs-type">int</span> i,ElementType &amp;e)</span><span class="hljs-comment">//i是位序,e是要返回的删除元素</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">if</span>(i&lt;<span class="hljs-number">1</span>||i&gt;L.length)<span class="hljs-comment">//判断位序的范围 </span><br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br>    e = L.data[i<span class="hljs-number">-1</span>];<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j = i;j&lt;L.length;j++)<br>    &#123;<br>        L.data[j<span class="hljs-number">-1</span>] = L.data[j];<br>&#125;<br>    L.length--;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>线性表的查找：</p><ul><li><p>按位查找</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function">ElementType <span class="hljs-title">GetElem</span><span class="hljs-params">(SeqList &amp;L,<span class="hljs-type">int</span> i)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">if</span>(i&gt;L.length<span class="hljs-number">+1</span>||i&lt;<span class="hljs-number">1</span>)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> L.data[i<span class="hljs-number">-1</span>];<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>按值查找(返回位序)</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function">ElementType <span class="hljs-title">LocateElem</span><span class="hljs-params">(SeqList &amp;L,ElementType e)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;L.length;i++)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(L.data[i] == e)<br>        &#123;<br>           <span class="hljs-keyword">return</span> i<span class="hljs-number">+1</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><p>​</p><p>链表：地址不一定相邻。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>My New Post</title>
    <link href="/2024/10/14/My-New-Post/"/>
    <url>/2024/10/14/My-New-Post/</url>
    
    <content type="html"><![CDATA[<p>代码块测试:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    cout&lt;&lt;<span class="hljs-string">&quot;Hello,world!&quot;</span>&lt;&lt;endl;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/10/14/hello-world/"/>
    <url>/2024/10/14/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
